{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/lib/helpers.js","webpack:///./.cache/public-page-renderer.js","webpack:///./client-config.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/icon/hamburger.js","webpack:///./src/components/icon/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/container.js","webpack:///./src/lib/image-url.js","webpack:///./src/components/graphql-error-list.js","webpack:///./src/containers/layout.js","webpack:///./src/components/serializers.js","webpack:///./src/components/figure.js","webpack:///./src/components/block-text.js","webpack:///./src/components/project-preview.js","webpack:///./src/components/project-preview-grid.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_lib_helpers__WEBPACK_IMPORTED_MODULE_1__","_components_container__WEBPACK_IMPORTED_MODULE_2__","_components_graphql_error_list__WEBPACK_IMPORTED_MODULE_3__","_components_project_preview_grid__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_containers_layout__WEBPACK_IMPORTED_MODULE_6__","IndexPage","props","data","errors","a","createElement","site","projectNodes","projects","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","Error","title","description","keywords","hidden","nodes","browseMoreHref","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","render","finalData","Fragment","children","Consumer","cn","buildImageObj","date_fns__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","length","args","Array","_key","Boolean","join","edges","map","edge","node","slug","current","_ref2","publishedAt","isFuture","source","imageObj","asset","_id","crop","hotspot","m","module","exports","require","default","sanity","projectId","process","dataset","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","lang","meta","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","siteTitle","siteAuthor","author","name","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","_public_static_d_2913871497_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","strokeStyle","vectorEffect","HamburgerIcon","react_default","viewBox","fill","xmlns","preserveAspectRatio","width","height","stroke","style","Icon","symbol","hamburger","Header","onHideNav","onShowNav","showNav","className","styles","root","wrapper","branding","gatsby_browser_entry","to","toggleNavButton","onClick","icon","nav","Layout","header","footer","footerWrapper","siteInfo","Date","getFullYear","href","_container_module_css__WEBPACK_IMPORTED_MODULE_1__","_container_module_css__WEBPACK_IMPORTED_MODULE_1___default","Container","imageUrlFor","_client_config__WEBPACK_IMPORTED_MODULE_0__","_client_config__WEBPACK_IMPORTED_MODULE_0___default","_sanity_image_url__WEBPACK_IMPORTED_MODULE_1__","builder","imageUrlBuilder","clientConfig","image","GraphQLErrorList","error","key","message","LayoutContainer","_useState","useState","setShowNav","handleShowNav","handleHideNav","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_2247365910_json__WEBPACK_IMPORTED_MODULE_1__","serializers","types","figure","fluidProps","getFluidGatsbyImage","maxWidth","gatsby_image_default","fluid","alt","caption","BlockText","blocks","BlockContent_default","ProjectPreview","leadMediaThumb","mainImage","src","Math","floor","url","responsiveTitle3","_rawExcerpt","excerpt","block_text","ProjectPreviewGrid","headline","grid","id","project_preview","browseMoreNav"],"mappings":"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","file":"component---src-pages-index-js-80562cdfee9435ad6784.js","sourcesContent":["import React from 'react'\nimport {graphql} from 'gatsby'\nimport {\n  mapEdgesToNodes,\n  filterOutDocsWithoutSlugs,\n  filterOutDocsPublishedInTheFuture\n} from '../lib/helpers'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport ProjectPreviewGrid from '../components/project-preview-grid'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  query IndexPageQuery {\n    site: sanitySiteSettings(_id: {regex: \"/(drafts.|)siteSettings/\"}) {\n      title\n      description\n      keywords\n    }\n    projects: allSanitySampleProject(\n      limit: 6\n      sort: {fields: [publishedAt], order: DESC}\n      filter: {slug: {current: {ne: null}}, publishedAt: {ne: null}}\n    ) {\n      edges {\n        node {\n          id\n          mainImage {\n            crop {\n              _key\n              _type\n              top\n              bottom\n              left\n              right\n            }\n            hotspot {\n              _key\n              _type\n              x\n              y\n              height\n              width\n            }\n            asset {\n              _id\n            }\n            alt\n          }\n          title\n          _rawExcerpt\n          slug {\n            current\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = props => {\n  const {data, errors} = props\n\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    )\n  }\n\n  const site = (data || {}).site\n  const projectNodes = (data || {}).projects\n    ? mapEdgesToNodes(data.projects)\n      .filter(filterOutDocsWithoutSlugs)\n      .filter(filterOutDocsPublishedInTheFuture)\n    : []\n\n  if (!site) {\n    throw new Error(\n      'Missing \"Site settings\". Open the studio at http://localhost:3333 and add some content to \"Site settings\" and restart the development server.'\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title={site.title} description={site.description} keywords={site.keywords} />\n      <Container>\n        <h1 hidden>Welcome to {site.title}</h1>\n        {projectNodes && (\n          <ProjectPreviewGrid\n            title='Latest projects'\n            nodes={projectNodes}\n            browseMoreHref='/archive/'\n          />\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import {format, isFuture} from 'date-fns'\n\nexport function cn (...args) {\n  return args.filter(Boolean).join(' ')\n}\n\nexport function mapEdgesToNodes (data) {\n  if (!data.edges) return []\n  return data.edges.map(edge => edge.node)\n}\n\nexport function filterOutDocsWithoutSlugs ({slug}) {\n  return (slug || {}).current\n}\n\nexport function filterOutDocsPublishedInTheFuture ({publishedAt}) {\n  return !isFuture(publishedAt)\n}\n\nexport function getBlogUrl (publishedAt, slug) {\n  return `/blog/${format(publishedAt, 'YYYY/MM')}/${slug.current || slug}/`\n}\n\nexport function buildImageObj (source) {\n  const imageObj = {\n    asset: {_ref: source.asset._ref || source.asset._id}\n  }\n\n  if (source.crop) imageObj.crop = source.crop\n  if (source.hotspot) imageObj.hotspot = source.hotspot\n\n  return imageObj\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n  sanity: {\n    projectId: process.env.GATSBY_SANITY_PROJECT_ID || 'neoqkgsx',\n    dataset: process.env.GATSBY_SANITY_DATASET || 'production'\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport {StaticQuery, graphql} from 'gatsby'\n\nfunction SEO ({description, lang, meta, keywords, title}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || (data.site && data.site.description) || ''\n        const siteTitle = (data.site && data.site.title) || ''\n        const siteAuthor = (data.site && data.site.author && data.site.author.name) || ''\n        return (\n          <Helmet\n            htmlAttributes={{lang}}\n            title={title}\n            titleTemplate={title === siteTitle ? '%s' : `%s | ${siteTitle}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: siteAuthor\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords && keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site: sanitySiteSettings(_id: {eq: \"siteSettings\"}) {\n      title\n      description\n      keywords\n      author {\n        name\n      }\n    }\n  }\n`\n","import React from 'react'\n\nconst strokeStyle = {vectorEffect: 'non-scaling-stroke'}\n\nconst HamburgerIcon = () => (\n  <svg\n    viewBox='0 0 25 25'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    preserveAspectRatio='xMidYMid'\n    width='1em'\n    height='1em'\n  >\n    <path d='M5 7.5H20' stroke='currentColor' style={strokeStyle} />\n    <path d='M5 12.5H20' stroke='currentColor' style={strokeStyle} />\n    <path d='M5 17.5H20' stroke='currentColor' style={strokeStyle} />\n  </svg>\n)\n\nexport default HamburgerIcon\n","import React from 'react'\nimport HamburgerIcon from './hamburger'\n\nfunction Icon (props) {\n  switch (props.symbol) {\n    case 'hamburger':\n      return <HamburgerIcon />\n    default:\n      return <span>Unknown icon: {props.symbol}</span>\n  }\n}\n\nexport default Icon\n","import {Link} from 'gatsby'\nimport React from 'react'\nimport Icon from './icon'\nimport {cn} from '../lib/helpers'\n\nimport styles from './header.module.css'\n\nconst Header = ({onHideNav, onShowNav, showNav, siteTitle}) => (\n  <div className={styles.root}>\n    <div className={styles.wrapper}>\n      <div className={styles.branding}>\n        <Link to='/'>{siteTitle}</Link>\n      </div>\n\n      <button className={styles.toggleNavButton} onClick={showNav ? onHideNav : onShowNav}>\n        <Icon symbol='hamburger' />\n      </button>\n\n      <nav className={cn(styles.nav, showNav && styles.showNav)}>\n        <ul>\n          <li>\n            <Link to='/archive/'>Archive</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport Header from './header'\n\nimport '../styles/layout.css'\nimport styles from './layout.module.css'\n\nconst Layout = ({children, onHideNav, onShowNav, showNav, siteTitle}) => (\n  <>\n    <Header siteTitle={siteTitle} onHideNav={onHideNav} onShowNav={onShowNav} showNav={showNav} />\n    <div className={styles.content}>{children}</div>\n    <footer className={styles.footer}>\n      <div className={styles.footerWrapper}>\n        <div className={styles.siteInfo}>\n          © {new Date().getFullYear()}, Built with <a href='https://www.sanity.io'>Sanity</a> &amp;\n          {` `}\n          <a href='https://www.gatsbyjs.org'>Gatsby</a>\n        </div>\n      </div>\n    </footer>\n  </>\n)\n\nexport default Layout\n","import React from 'react'\n\nimport styles from './container.module.css'\n\nconst Container = ({children}) => {\n  return <div className={styles.root}>{children}</div>\n}\n\nexport default Container\n","import clientConfig from '../../client-config'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst builder = imageUrlBuilder(clientConfig.sanity)\n\nexport function imageUrlFor (source) {\n  return builder.image(source)\n}\n","import React from 'react'\n\nconst GraphQLErrorList = ({errors}) => (\n  <div>\n    <h1>GraphQL Error</h1>\n    {errors.map(error => (\n      <pre key={error.message}>{error.message}</pre>\n    ))}\n  </div>\n)\n\nexport default GraphQLErrorList\n","import {graphql, StaticQuery} from 'gatsby'\nimport React, {useState} from 'react'\nimport Layout from '../components/layout'\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site: sanitySiteSettings(_id: {regex: \"/(drafts.|)siteSettings/\"}) {\n      title\n    }\n  }\n`\n\nfunction LayoutContainer (props) {\n  const [showNav, setShowNav] = useState(false)\n  function handleShowNav () {\n    setShowNav(true)\n  }\n  function handleHideNav () {\n    setShowNav(false)\n  }\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        if (!data.site) {\n          throw new Error(\n            'Missing \"Site settings\". Open the studio at http://localhost:3333 and add \"Site settings\" data'\n          )\n        }\n        return (\n          <Layout\n            {...props}\n            showNav={showNav}\n            siteTitle={data.site.title}\n            onHideNav={handleHideNav}\n            onShowNav={handleShowNav}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default LayoutContainer\n","import Figure from './figure'\n\nconst serializers = {\n  types: {\n    figure: Figure\n  }\n}\n\nexport default serializers\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport {getFluidGatsbyImage} from 'gatsby-source-sanity'\nimport clientConfig from '../../client-config'\n\nimport styles from './figure.module.css'\n\nexport default ({node}) => {\n  if (!node.asset) {\n    return null\n  }\n\n  const fluidProps = getFluidGatsbyImage(node.asset._ref, {maxWidth: 675}, clientConfig.sanity)\n\n  return (\n    <figure className={styles.root}>\n      <Img fluid={fluidProps} alt={node.alt} />\n      {node.caption && <figcaption>{node.caption}</figcaption>}\n    </figure>\n  )\n}\n","import BaseBlockContent from '@sanity/block-content-to-react'\nimport React from 'react'\nimport serializers from './serializers'\n\nconst BlockText = ({blocks}) => <BaseBlockContent blocks={blocks} serializers={serializers} />\n\nexport default BlockText\n","import {Link} from 'gatsby'\nimport React from 'react'\nimport {cn, buildImageObj} from '../lib/helpers'\nimport {imageUrlFor} from '../lib/image-url'\nimport BlockText from './block-text'\n\nimport styles from './project-preview.module.css'\nimport {responsiveTitle3} from './typography.module.css'\n\nfunction ProjectPreview (props) {\n  return (\n    <Link className={styles.root} to={`/project/${props.slug.current}`}>\n      <div className={styles.leadMediaThumb}>\n        {props.mainImage && props.mainImage.asset && (\n          <img\n            src={imageUrlFor(buildImageObj(props.mainImage))\n              .width(600)\n              .height(Math.floor((9 / 16) * 600))\n              .url()}\n            alt={props.mainImage.alt}\n          />\n        )}\n      </div>\n      <h3 className={cn(responsiveTitle3, styles.title)}>{props.title}</h3>\n      {props._rawExcerpt && (\n        <div className={styles.excerpt}>\n          <BlockText blocks={props._rawExcerpt} />\n        </div>\n      )}\n    </Link>\n  )\n}\n\nexport default ProjectPreview\n","import {Link} from 'gatsby'\nimport React from 'react'\nimport ProjectPreview from './project-preview'\n\nimport styles from './project-preview-grid.module.css'\n\nfunction ProjectPreviewGrid (props) {\n  return (\n    <div className={styles.root}>\n      {props.title && <h2 className={styles.headline}>{props.title}</h2>}\n      <ul className={styles.grid}>\n        {props.nodes &&\n          props.nodes.map(node => (\n            <li key={node.id}>\n              <ProjectPreview {...node} />\n            </li>\n          ))}\n      </ul>\n      {props.browseMoreHref && (\n        <div className={styles.browseMoreNav}>\n          <Link to={props.browseMoreHref}>Browse more</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nProjectPreviewGrid.defaultProps = {\n  title: '',\n  nodes: [],\n  browseMoreHref: ''\n}\n\nexport default ProjectPreviewGrid\n"],"sourceRoot":""}