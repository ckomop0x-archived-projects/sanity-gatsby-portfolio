{"version":3,"sources":["webpack:///./src/pages/portfolio.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","Portfolio","a","createElement","title","keywords","className","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteTitle","siteAuthor","author","name","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","length","join","rel","href","_public_static_d_2913871497_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","Header","react_default","gatsby_browser_entry","to","Layout","onHideNav","onShowNav","showNav","components_Header_Header","styles","Date","getFullYear"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAkBeQ,UAdG,kBAChBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,UAAUC,SAAU,8BAC/BR,EAAAK,EAAAC,cAAA,WAASG,UAAU,aACjBT,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,oUCTNV,EAAAc,EAAAZ,EAAA,sBAAAa,IAAA,IAAAZ,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAa,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAAK,EAAAW,GAAAhB,EAAAc,EAAAZ,EAAA,sBAAAe,EAAAR,IAAAT,EAAA,KAAAA,EAAA,GAcyBkB,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,OACzDC,EAAYH,EACdA,EAAKA,KACLD,EAAgBE,IAAUF,EAAgBE,GAAOD,KAErD,OACEtB,EAAAK,EAAAC,cAACN,EAAAK,EAAMqB,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAazB,EAAAK,EAAAC,cAAA,qCAKrB,IAAMK,EAAc,SAAAgB,GAAS,IACnBL,EAAkCK,EAAlCL,KAAMC,EAA4BI,EAA5BJ,MAAOC,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACE5B,EAAAK,EAAAC,cAACU,EAAmBa,SAApB,KACG,SAAAR,GAAe,OACdrB,EAAAK,EAAAC,cAACa,EAAD,CACEG,KAAMA,EACNC,MAAOA,EACPC,OAAQA,GAAUI,EAClBP,gBAAiBA,4BCzC3B,IAAsBS,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6ECsBhCK,UAjBU,SAAAf,GAAiC,IAA9BgB,EAA8BhB,EAA9BgB,SAAUC,EAAoBjB,EAApBiB,cACpC,OAAKA,EAGEpB,IAAMX,cAAcgC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,sGCFX,SAASC,EAATtB,GAA0D,IAA3CuB,EAA2CvB,EAA3CuB,YAAaC,EAA8BxB,EAA9BwB,KAAMC,EAAwBzB,EAAxByB,KAAMrC,EAAkBY,EAAlBZ,SAAUD,EAAQa,EAARb,MAChD,OACEuC,EAAAzC,EAAAC,cAACyC,EAAA,EAAD,CACExB,MAAOyB,EACPxB,OAAQ,SAAAF,GACN,IAAM2B,EAAkBN,GAAgBrB,EAAK4B,MAAQ5B,EAAK4B,KAAKP,aAAgB,GACzEQ,EAAa7B,EAAK4B,MAAQ5B,EAAK4B,KAAK3C,OAAU,GAC9C6C,EAAc9B,EAAK4B,MAAQ5B,EAAK4B,KAAKG,QAAU/B,EAAK4B,KAAKG,OAAOC,MAAS,GAC/E,OACER,EAAAzC,EAAAC,cAACiD,EAAAlD,EAAD,CACEmD,eAAgB,CAACZ,QACjBrC,MAAOA,EACPkD,cAAelD,IAAU4C,EAAY,KAAtB,QAAqCA,EACpDN,KAAM,CACJ,CACES,KAAM,cACNI,QAAST,GAEX,CACEU,SAAU,WACVD,QAASnD,GAEX,CACEoD,SAAU,iBACVD,QAAST,GAEX,CACEU,SAAU,UACVD,QAAS,WAEX,CACEJ,KAAM,eACNI,QAAS,WAEX,CACEJ,KAAM,kBACNI,QAASN,GAEX,CACEE,KAAM,gBACNI,QAASnD,GAEX,CACE+C,KAAM,sBACNI,QAAST,IAGVW,OACCpD,GAAYA,EAASqD,OAAS,EAC1B,CACAP,KAAM,WACNI,QAASlD,EAASsD,KAAK,OAEvB,IAELF,OAAOf,IAEVC,EAAAzC,EAAAC,cAAA,QAAMyD,IAAI,aAAaC,KAAK,0EAC5BlB,EAAAzC,EAAAC,cAAA,QAAMyD,IAAI,aAAaC,KAAK,+EAxDpC1C,KAAA2C,IAgEJvB,EAAIwB,aAAe,CACjBtB,KAAM,KACNC,KAAM,GACNrC,SAAU,IAWGkC,MAEf,IAAMM,EAAY,kUClFZmB,UAAS,SAAA/C,GAAA,IAAG+B,EAAH/B,EAAG+B,UAAH,OACbiB,EAAA/D,EAAAC,cAAA,UAAQG,UAAU,UAChB2D,EAAA/D,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,IAAI7D,UAAU,iBAAiB0C,GACxCiB,EAAA/D,EAAAC,cAAA,OAAKG,UAAU,eACb2D,EAAA/D,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,IAAI7D,UAAU,gBAAvB,QACA2D,EAAA/D,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,cAAc7D,UAAU,gBAAjC,iBAYN0D,EAAOD,aAAe,CACpBf,UAAS,IAGIgB,0CCAAI,IAlBA,SAAAnD,GAAA,IAAEQ,EAAFR,EAAEQ,SAAU4C,EAAZpD,EAAYoD,UAAWC,EAAvBrD,EAAuBqD,UAAWC,EAAlCtD,EAAkCsD,QAASvB,EAA3C/B,EAA2C+B,UAA3C,OACbiB,EAAA/D,EAAAC,cAAA8D,EAAA/D,EAAAqB,SAAA,KACE0C,EAAA/D,EAAAC,cAACqE,EAAD,CAAQxB,UAAWA,EAAWqB,UAAWA,EAAWC,UAAWA,EAAWC,QAASA,IACnFN,EAAA/D,EAAAC,cAAA,QAAMG,UAAU,iBACd2D,EAAA/D,EAAAC,cAAA,OAAKG,UAAWmE,IAAOlB,SAAU9B,IAGnCwC,EAAA/D,EAAAC,cAAA,UAAQG,UAAU,UAChB2D,EAAA/D,EAAAC,cAAA,OAAKG,UAAU,aAAf,MACO,IAAIoE,MAAOC,cADlB,2CAE0BV,EAAA/D,EAAAC,cAAA,KAAG0D,KAAK,yBAAR,UAF1B,SAIII,EAAA/D,EAAAC,cAAA,KAAG0D,KAAK,4BAAR","file":"component---src-pages-portfolio-jsx-71339fc4c02ddf71d4d4.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst Portfolio = () => (\n  <Layout>\n    <SEO title=\"History\" keywords={[`pavel`, `history`, `react`]}/>\n    <section className=\"container\">\n      <h1>Portfolio</h1>\n      <p>\n        I have a lot of different projects done from the start of my developer carrier. Some of them\n        I'll put on this page. On Frontend side I use React + TypeScript. On backend NodeJS. I have\n        experience with Angular, PHP, jQuery, Backbone, but now I prefer to avoid work with them.\n      </p>\n    </section>\n  </Layout>\n);\n\nexport default Portfolio;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport {StaticQuery, graphql} from 'gatsby'\n\nfunction SEO ({description, lang, meta, keywords, title}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || (data.site && data.site.description) || ''\n        const siteTitle = (data.site && data.site.title) || ''\n        const siteAuthor = (data.site && data.site.author && data.site.author.name) || ''\n        return (\n          <Helmet\n            htmlAttributes={{lang}}\n            title={title}\n            titleTemplate={title === siteTitle ? '%s' : `%s | ${siteTitle}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: siteAuthor\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords && keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css' />\n            <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.1/animate.min.css' />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site: sanitySiteSettings(_id: {eq: \"siteSettings\"}) {\n      title\n      description\n      keywords\n      author {\n        name\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport \"./header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <Link to=\"/\" className=\"header__title\">{siteTitle}</Link>\n    <nav className=\"header__nav\">\n      <Link to=\"/\" className=\"header__link\">Home</Link>\n      <Link to=\"/portfolio/\" className=\"header__link\">Portfolio</Link>\n      {/*<Link to=\"/story/\" className=\"header__link\">Story</Link>*/}\n      {/*<Link to=\"/links/\" className=\"header__link\">Links</Link>*/}\n      {/*<Link to=\"/contacts/\" className=\"header__link\">Contacts</Link>*/}\n    </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\n// import Header from './header'\nimport Header from \"./Header/Header\"\n\nimport '../styles/layout.css'\nimport styles from './layout.module.css'\nimport './main.css'\n\nconst Layout = ({children, onHideNav, onShowNav, showNav, siteTitle}) => (\n  <>\n    <Header siteTitle={siteTitle} onHideNav={onHideNav} onShowNav={onShowNav} showNav={showNav} />\n    <main className=\"mainContainer\">\n      <div className={styles.content}>{children}</div>\n    </main>\n\n    <footer className=\"footer\">\n      <div className=\"container\">\n          © {new Date().getFullYear()} Pavel \"Ckomop0x\"\n          Klochkov., Built with <a href='https://www.sanity.io'>Sanity</a> &amp;\n          {` `}\n          <a href='https://www.gatsbyjs.org'>Gatsby</a>\n      </div>\n    </footer>\n  </>\n)\n\nexport default Layout\n"],"sourceRoot":""}