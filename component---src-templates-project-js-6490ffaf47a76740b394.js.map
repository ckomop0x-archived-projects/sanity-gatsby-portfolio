{"version":3,"sources":["webpack:///./src/components/block-content.js","webpack:///./src/components/role-list.js","webpack:///./src/lib/string-utils.js","webpack:///./src/components/project.js","webpack:///./src/templates/project.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/lib/helpers.js","webpack:///./.cache/public-page-renderer.js","webpack:///./client-config.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/icon/hamburger.js","webpack:///./src/components/icon/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/container.js","webpack:///./src/lib/image-url.js","webpack:///./src/components/graphql-error-list.js","webpack:///./src/containers/layout.js","webpack:///./src/components/serializers.js","webpack:///./src/components/figure.js"],"names":["BlockContent","_ref","blocks","react_default","a","createElement","BlockContent_default","Object","assign","serializers","clientConfig","sanity","RoleList","items","title","className","styles","root","headline","list","map","item","key","_key","listItem","avatar","person","image","asset","src","imageUrlFor","buildImageObj","width","height","fit","url","alt","name","roles","role","idx","str","substr","toUpperCase","length","Project","props","_rawBody","categories","mainImage","members","publishedAt","relatedProjects","Math","floor","container","grid","mainContent","block_content","metaContent","differenceInDays","Date","distanceInWords","format","role_list","categoriesHeadline","category","_id","relatedProjectsHeadline","project","slug","gatsby_browser_entry","to","current","__webpack_require__","d","__webpack_exports__","query","ProjectTemplate","data","errors","sampleProject","layout","seo","graphql_error_list","components_project","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","children","Consumer","cn","mapEdgesToNodes","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","date_fns__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","args","Array","filter","Boolean","join","edges","edge","node","_ref2","isFuture","source","imageObj","crop","hotspot","m","module","exports","require","default","projectId","process","dataset","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteTitle","siteAuthor","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","_public_static_d_2913871497_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","strokeStyle","vectorEffect","HamburgerIcon","viewBox","fill","xmlns","preserveAspectRatio","stroke","style","Icon","symbol","hamburger","Header","onHideNav","onShowNav","showNav","wrapper","branding","toggleNavButton","onClick","icon","nav","Layout","header","footer","footerWrapper","siteInfo","getFullYear","href","_container_module_css__WEBPACK_IMPORTED_MODULE_1__","_container_module_css__WEBPACK_IMPORTED_MODULE_1___default","Container","_client_config__WEBPACK_IMPORTED_MODULE_0__","_client_config__WEBPACK_IMPORTED_MODULE_0___default","_sanity_image_url__WEBPACK_IMPORTED_MODULE_1__","builder","imageUrlBuilder","GraphQLErrorList","error","message","LayoutContainer","_useState","useState","setShowNav","handleShowNav","handleHideNav","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","Error","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_2247365910_json__WEBPACK_IMPORTED_MODULE_1__","types","figure","fluidProps","getFluidGatsbyImage","maxWidth","gatsby_image_default","fluid","caption"],"mappings":"gOASeA,EAJM,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,OAAF,OACnBC,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAkBN,OAAQA,EAAQO,YAAaA,KAAiBC,IAAaC,sCCgDhEC,MA/Cf,SAAAX,GAAmC,IAAfY,EAAeZ,EAAfY,MAAOC,EAAQb,EAARa,MACzB,OACEX,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOC,MACrBd,EAAAC,EAAAC,cAAA,MAAIU,UAAWC,IAAOE,UAAWJ,GACjCX,EAAAC,EAAAC,cAAA,MAAIU,UAAWC,IAAOG,MACnBN,EAAMO,IAAI,SAAAC,GAAI,OACblB,EAAAC,EAAAC,cAAA,MAAIiB,IAAKD,EAAKE,KAAMR,UAAWC,IAAOQ,UACpCrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOS,QACpBJ,EAAKK,QAAUL,EAAKK,OAAOC,OAASN,EAAKK,OAAOC,MAAMC,OACrDzB,EAAAC,EAAAC,cAAA,OACEwB,IAAKC,YAAYC,YAAcV,EAAKK,OAAOC,QACxCK,MAAM,KACNC,OAAO,KACPC,IAAI,QACJC,MACHC,IAAI,OAKZjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAAUgB,EAAKK,QAAUL,EAAKK,OAAOW,MAASlC,EAAAC,EAAAC,cAAA,4BAE/CgB,EAAKiB,OACJnC,EAAAC,EAAAC,cAAA,WACGgB,EAAKiB,MAAMlB,IAAI,SAACmB,EAAMC,GACrB,QAAQ,GACN,KAAa,IAARA,EACH,OAAOrC,EAAAC,EAAAC,cAAA,QAAMiB,IAAKiB,GCpCxC,IADuBE,EDqCgCF,GCpCzCG,OAAO,EAAG,GAAGC,cAAgBF,EAAIC,OAAO,IDqClC,KAAKF,IAAQnB,EAAKiB,MAAMM,OAAS,EAC/B,OAAOzC,EAAAC,EAAAC,cAAA,QAAMiB,IAAKiB,GAAX,MAAqBA,GAC9B,QACE,OAAOpC,EAAAC,EAAAC,cAAA,QAAMiB,IAAKiB,GAAX,KAAoBA,GCzC5C,IAAkBE,8BC2EVI,MAhEf,SAAkBC,GAAO,IAChBC,EAAiFD,EAAjFC,SAAUjC,EAAuEgC,EAAvEhC,MAAOkC,EAAgEF,EAAhEE,WAAYC,EAAoDH,EAApDG,UAAWC,EAAyCJ,EAAzCI,QAASC,EAAgCL,EAAhCK,YAAaC,EAAmBN,EAAnBM,gBACrE,OACEjD,EAAAC,EAAAC,cAAA,WAASU,UAAWC,IAAOC,MACxB6B,EAAMG,WAAaA,EAAUrB,OAC5BzB,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOiC,WACrB9C,EAAAC,EAAAC,cAAA,OACEwB,IAAKC,YAAYC,YAAckB,IAC5BjB,MAAM,MACNC,OAAOoB,KAAKC,MAAO,MACnBpB,IAAI,QACJC,MACHC,IAAKa,EAAUb,OAIrBjC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOwC,MACrBrD,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOyC,aACrBtD,EAAAC,EAAAC,cAAA,MAAIU,UAAWC,IAAOF,OAAQA,GAC7BiC,GAAY5C,EAAAC,EAAAC,cAACqD,EAAD,CAAcxD,OAAQ6C,GAAY,MAEjD5C,EAAAC,EAAAC,cAAA,SAAOU,UAAWC,IAAO2C,aACtBR,GACChD,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOmC,aACpBS,2BAAiB,IAAIC,KAAKV,GAAc,IAAIU,MAAU,EACnDC,0BAAgB,IAAID,KAAKV,GAAc,IAAIU,MAC3CE,iBAAO,IAAIF,KAAKV,GAAc,iBAGrCD,GAAWA,EAAQN,OAAS,GAAKzC,EAAAC,EAAAC,cAAC2D,EAAD,CAAUnD,MAAOqC,EAASpC,MAAM,oBACjEkC,GAAcA,EAAWJ,OAAS,GACjCzC,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOgC,YACrB7C,EAAAC,EAAAC,cAAA,MAAIU,UAAWC,IAAOiD,oBAAtB,cACA9D,EAAAC,EAAAC,cAAA,UACG2C,EAAW5B,IAAI,SAAA8C,GAAQ,OACtB/D,EAAAC,EAAAC,cAAA,MAAIiB,IAAK4C,EAASC,KAAMD,EAASpD,WAKxCsC,GAAmBA,EAAgBR,OAAS,GAC3CzC,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOoC,iBACrBjD,EAAAC,EAAAC,cAAA,MAAIU,UAAWC,IAAOoD,yBAAtB,oBACAjE,EAAAC,EAAAC,cAAA,UACG+C,EAAgBhC,IAAI,SAAAiD,GAAO,OAC1BlE,EAAAC,EAAAC,cAAA,MAAIiB,IAAG,WAAa+C,EAAQF,KACzBE,EAAQC,KACPnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAE,YAAcH,EAAQC,KAAKG,SAAYJ,EAAQvD,OAEvDX,EAAAC,EAAAC,cAAA,YAAOgE,EAAQvD,mCC7DvC4D,EAAAC,EAAAC,EAAA,0BAAAC,IAQO,IAAMA,EAAK,YA6FHC,UAlBS,SAAAhC,GAAS,IACxBiC,EAAgBjC,EAAhBiC,KAAMC,EAAUlC,EAAVkC,OACPX,EAAUU,GAAQA,EAAKE,cAC7B,OACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACGF,GAAU7E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAKrE,MAAM,kBACrBuD,GAAWlE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAKrE,MAAOuD,EAAQvD,OAAS,aAExCkE,GACC7E,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAkBJ,OAAQA,KAG7BX,GAAWlE,EAAAC,EAAAC,cAACgF,EAAYhB,uCChG/BK,EAAAC,EAAAC,EAAA,sBAAAU,IAAA,IAAAC,EAAAb,EAAA,GAAAc,EAAAd,EAAAe,EAAAF,GAAAG,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAAe,EAAAC,GAAAhB,EAAAC,EAAAC,EAAA,sBAAAe,EAAAvF,IAAAsE,EAAA,KAAAA,EAAA,GAcyBkB,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAThG,GAA2E,IAAxCiG,EAAwCjG,EAAxCiG,gBAAiBnB,EAAuB9E,EAAvB8E,KAAMF,EAAiB5E,EAAjB4E,MAAOsB,EAAUlG,EAAVkG,OACzDC,EAAYrB,EACdA,EAAKA,KACLmB,EAAgBrB,IAAUqB,EAAgBrB,GAAOE,KAErD,OACES,EAAApF,EAAAC,cAACmF,EAAApF,EAAMiG,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAaZ,EAAApF,EAAAC,cAAA,qCAKrB,IAAMiF,EAAc,SAAAxC,GAAS,IACnBiC,EAAkCjC,EAAlCiC,KAAMF,EAA4B/B,EAA5B+B,MAAOsB,EAAqBrD,EAArBqD,OAAQG,EAAaxD,EAAbwD,SAE7B,OACEd,EAAApF,EAAAC,cAACyF,EAAmBS,SAApB,KACG,SAAAL,GAAe,OACdV,EAAApF,EAAAC,cAAC4F,EAAD,CACElB,KAAMA,EACNF,MAAOA,EACPsB,OAAQA,GAAUG,EAClBJ,gBAAiBA,yCCzC3BxB,EAAAC,EAAAC,EAAA,sBAAA4B,IAAA9B,EAAAC,EAAAC,EAAA,sBAAA6B,IAAA/B,EAAAC,EAAAC,EAAA,sBAAA8B,IAAAhC,EAAAC,EAAAC,EAAA,sBAAA+B,IAAAjC,EAAAC,EAAAC,EAAA,sBAAA7C,IAAA,IAAA6E,EAAAlC,EAAA,KAEO,SAAS8B,IAAa,QAAAK,EAAAC,UAAAlE,OAANmE,EAAM,IAAAC,MAAAH,GAAAtF,EAAA,EAAAA,EAAAsF,EAAAtF,IAANwF,EAAMxF,GAAAuF,UAAAvF,GAC3B,OAAOwF,EAAKE,OAAOC,SAASC,KAAK,KAG5B,SAASV,EAAiB1B,GAC/B,OAAKA,EAAKqC,MACHrC,EAAKqC,MAAMhG,IAAI,SAAAiG,GAAI,OAAIA,EAAKC,OADX,GAInB,SAASZ,EAATzG,GACL,OADiDA,EAAPqE,MAC1B,IAAIG,QAGf,SAASkC,EAATY,GAA2D,IAAdpE,EAAcoE,EAAdpE,YAClD,OAAQqE,mBAASrE,GAOZ,SAASpB,EAAe0F,GAC7B,IAAMC,EAAW,CACf9F,MAAO,CAAC3B,KAAMwH,EAAO7F,MAAM3B,MAAQwH,EAAO7F,MAAMuC,MAMlD,OAHIsD,EAAOE,OAAMD,EAASC,KAAOF,EAAOE,MACpCF,EAAOG,UAASF,EAASE,QAAUH,EAAOG,SAEvCF,wBC/BT,IAAsBG,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,uBCA/CC,EAAOC,QAAU,CACfpH,OAAQ,CACNuH,UAAWC,WACXC,QAASD,0FCmBEE,UAjBU,SAAApI,GAAiC,IAA9BqI,EAA8BrI,EAA9BqI,SAAUC,EAAoBtI,EAApBsI,cACpC,OAAKA,EAGExC,IAAM1F,cAAcmI,IAApBjI,OAAAC,OAAA,CACL8H,WACAC,iBACGA,EAAcE,OALV,sGCFX,SAASC,EAATzI,GAA0D,IAA3C0I,EAA2C1I,EAA3C0I,YAAaC,EAA8B3I,EAA9B2I,KAAMC,EAAwB5I,EAAxB4I,KAAMC,EAAkB7I,EAAlB6I,SAAUhI,EAAQb,EAARa,MAChD,OACEiI,EAAA3I,EAAAC,cAAC2I,EAAA,EAAD,CACEnE,MAAOoE,EACP9C,OAAQ,SAAApB,GACN,IAAMmE,EAAkBP,GAAgB5D,EAAKoE,MAAQpE,EAAKoE,KAAKR,aAAgB,GACzES,EAAarE,EAAKoE,MAAQpE,EAAKoE,KAAKrI,OAAU,GAC9CuI,EAActE,EAAKoE,MAAQpE,EAAKoE,KAAKG,QAAUvE,EAAKoE,KAAKG,OAAOjH,MAAS,GAC/E,OACE0G,EAAA3I,EAAAC,cAACkJ,EAAAnJ,EAAD,CACEoJ,eAAgB,CAACZ,QACjB9H,MAAOA,EACP2I,cAAe3I,IAAUsI,EAAY,KAAtB,QAAqCA,EACpDP,KAAM,CACJ,CACExG,KAAM,cACNqH,QAASR,GAEX,CACES,SAAU,WACVD,QAAS5I,GAEX,CACE6I,SAAU,iBACVD,QAASR,GAEX,CACES,SAAU,UACVD,QAAS,WAEX,CACErH,KAAM,eACNqH,QAAS,WAEX,CACErH,KAAM,kBACNqH,QAASL,GAEX,CACEhH,KAAM,gBACNqH,QAAS5I,GAEX,CACEuB,KAAM,sBACNqH,QAASR,IAGVU,OACCd,GAAYA,EAASlG,OAAS,EAC1B,CACAP,KAAM,WACNqH,QAASZ,EAAS3B,KAAK,OAEvB,IAELyC,OAAOf,MArDlB9D,KAAA8E,IA6DJnB,EAAIoB,aAAe,CACjBlB,KAAM,KACNC,KAAM,GACNC,SAAU,IAWGJ,MAEf,IAAMO,EAAY,kUClFZc,EAAc,CAACC,aAAc,sBAiBpBC,EAfO,kBACpB9J,EAAAC,EAAAC,cAAA,OACE6J,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNC,oBAAoB,WACpBrI,MAAM,MACNC,OAAO,OAEP9B,EAAAC,EAAAC,cAAA,QAAMsE,EAAE,YAAY2F,OAAO,eAAeC,MAAOR,IACjD5J,EAAAC,EAAAC,cAAA,QAAMsE,EAAE,aAAa2F,OAAO,eAAeC,MAAOR,IAClD5J,EAAAC,EAAAC,cAAA,QAAMsE,EAAE,aAAa2F,OAAO,eAAeC,MAAOR,MCHvCS,MATf,SAAe1H,GACb,OAAQA,EAAM2H,QACZ,IAAK,YACH,OAAOtK,EAAAC,EAAAC,cAACqK,EAAD,MACT,QACE,OAAOvK,EAAAC,EAAAC,cAAA,6BAAqByC,EAAM2H,qCCqBzBE,EAtBA,SAAA1K,GAAA,IAAE2K,EAAF3K,EAAE2K,UAAWC,EAAb5K,EAAa4K,UAAWC,EAAxB7K,EAAwB6K,QAAS1B,EAAjCnJ,EAAiCmJ,UAAjC,OACbjJ,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOC,MACrBd,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAO+J,SACrB5K,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOgK,UACrB7K,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAG,KAAK4E,IAGhBjJ,EAAAC,EAAAC,cAAA,UAAQU,UAAWC,IAAOiK,gBAAiBC,QAASJ,EAAUF,EAAYC,GACxE1K,EAAAC,EAAAC,cAAC8K,EAAD,CAAMV,OAAO,eAGftK,EAAAC,EAAAC,cAAA,OAAKU,UAAWyF,YAAGxF,IAAOoK,IAAKN,GAAW9J,IAAO8J,UAC/C3K,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAG,aAAT,4CCCG6G,IAhBA,SAAApL,GAAA,IAAEqG,EAAFrG,EAAEqG,SAAUsE,EAAZ3K,EAAY2K,UAAWC,EAAvB5K,EAAuB4K,UAAWC,EAAlC7K,EAAkC6K,QAAS1B,EAA3CnJ,EAA2CmJ,UAA3C,OACbjJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiG,SAAA,KACElG,EAAAC,EAAAC,cAACiL,EAAD,CAAQlC,UAAWA,EAAWwB,UAAWA,EAAWC,UAAWA,EAAWC,QAASA,IACnF3K,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAO0I,SAAUpD,GACjCnG,EAAAC,EAAAC,cAAA,UAAQU,UAAWC,IAAOuK,QACxBpL,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOwK,eACrBrL,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOyK,UAAvB,MACK,IAAI5H,MAAO6H,cADhB,gBAC2CvL,EAAAC,EAAAC,cAAA,KAAGsL,KAAK,yBAAR,UAD3C,SAGExL,EAAAC,EAAAC,cAAA,KAAGsL,KAAK,4BAAR,iDCfV,IAAApG,EAAAb,EAAA,GAAAc,EAAAd,EAAAe,EAAAF,GAAAqG,EAAAlH,EAAA,KAAAmH,EAAAnH,EAAAe,EAAAmG,GAQeE,IAJG,SAAA7L,GAAgB,IAAdqG,EAAcrG,EAAdqG,SAClB,OAAOd,EAAApF,EAAAC,cAAA,OAAKU,UAAWC,IAAOC,MAAOqF,sCCLvC5B,EAAAC,EAAAC,EAAA,sBAAA9C,IAAA,IAAAiK,EAAArH,EAAA,KAAAsH,EAAAtH,EAAAe,EAAAsG,GAAAE,EAAAvH,EAAA,KAGMwH,EAHNxH,EAAAe,EAAAwG,EAGgBE,GAAgBzL,IAAaC,QAEtC,SAASmB,EAAa2F,GAC3B,OAAOyE,EAAQvK,MAAM8F,sCCNvB,IAAAlC,EAAAb,EAAA,GAAAc,EAAAd,EAAAe,EAAAF,GAWe6G,IATU,SAAAnM,GAAA,IAAE+E,EAAF/E,EAAE+E,OAAF,OACvBQ,EAAApF,EAAAC,cAAA,WACEmF,EAAApF,EAAAC,cAAA,2BACC2E,EAAO5D,IAAI,SAAAiL,GAAK,OACf7G,EAAApF,EAAAC,cAAA,OAAKiB,IAAK+K,EAAMC,SAAUD,EAAMC,oGCFhCzH,EAAK,aAuCI0H,IA/Bf,SAA0BzJ,GAAO,IAAA0J,EACDC,oBAAS,GAAhC3B,EADwB0B,EAAA,GACfE,EADeF,EAAA,GAE/B,SAASG,IACPD,GAAW,GAEb,SAASE,IACPF,GAAW,GAEb,OACEG,EAAAzM,EAAAC,cAACyM,EAAA,EAAD,CACEjI,MAAOA,EACPsB,OAAQ,SAAApB,GACN,IAAKA,EAAKoE,KACR,MAAM,IAAI4D,MACR,kGAGJ,OACEF,EAAAzM,EAAAC,cAAC2M,EAAA,EAADzM,OAAAC,OAAA,GACMsC,EADN,CAEEgI,QAASA,EACT1B,UAAWrE,EAAKoE,KAAKrI,MACrB8J,UAAWgC,EACX/B,UAAW8B,MAdnB5H,KAAAkI,kMCnBExM,EAAc,CAClByM,MAAO,CACLC,OCGW,SAAAlN,GAAY,IAAVqH,EAAUrH,EAAVqH,KACf,IAAKA,EAAK1F,MACR,OAAO,KAGT,IAAMwL,EAAaC,8BAAoB/F,EAAK1F,MAAM3B,KAAM,CAACqN,SAAU,KAAM5M,IAAaC,QAEtF,OACER,EAAAC,EAAAC,cAAA,UAAQU,UAAWC,IAAOC,MACxBd,EAAAC,EAAAC,cAACkN,EAAAnN,EAAD,CAAKoN,MAAOJ,EAAYhL,IAAKkF,EAAKlF,MACjCkF,EAAKmG,SAAWtN,EAAAC,EAAAC,cAAA,kBAAaiH,EAAKmG,aDT1BhN","file":"component---src-templates-project-js-6490ffaf47a76740b394.js","sourcesContent":["import BaseBlockContent from '@sanity/block-content-to-react'\nimport React from 'react'\nimport clientConfig from '../../client-config'\nimport serializers from './serializers'\n\nconst BlockContent = ({blocks}) => (\n  <BaseBlockContent blocks={blocks} serializers={serializers} {...clientConfig.sanity} />\n)\n\nexport default BlockContent\n","import React from 'react'\nimport {buildImageObj} from '../lib/helpers'\nimport {imageUrlFor} from '../lib/image-url'\nimport {ucfirst} from '../lib/string-utils'\n\nimport styles from './role-list.module.css'\n\nfunction RoleList ({items, title}) {\n  return (\n    <div className={styles.root}>\n      <h2 className={styles.headline}>{title}</h2>\n      <ul className={styles.list}>\n        {items.map(item => (\n          <li key={item._key} className={styles.listItem}>\n            <div>\n              <div className={styles.avatar}>\n                {item.person && item.person.image && item.person.image.asset && (\n                  <img\n                    src={imageUrlFor(buildImageObj(item.person.image))\n                      .width(100)\n                      .height(100)\n                      .fit('crop')\n                      .url()}\n                    alt=''\n                  />\n                )}\n              </div>\n            </div>\n            <div>\n              <div>\n                <strong>{(item.person && item.person.name) || <em>Missing name</em>}</strong>\n              </div>\n              {item.roles && (\n                <div>\n                  {item.roles.map((role, idx) => {\n                    switch (true) {\n                      case idx === 0:\n                        return <span key={role}>{ucfirst(role)}</span>\n                      case idx === item.roles.length - 1:\n                        return <span key={role}> & {role}</span>\n                      default:\n                        return <span key={role}>, {role}</span>\n                    }\n                  })}\n                </div>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default RoleList\n","export function ucfirst (str) {\n  return `${str.substr(0, 1).toUpperCase()}${str.substr(1)}`\n}\n","import {format, distanceInWords, differenceInDays} from 'date-fns'\nimport React from 'react'\nimport {Link} from 'gatsby'\nimport {buildImageObj} from '../lib/helpers'\nimport {imageUrlFor} from '../lib/image-url'\nimport BlockContent from './block-content'\nimport Container from './container'\nimport RoleList from './role-list'\n\nimport styles from './project.module.css'\n\nfunction Project (props) {\n  const {_rawBody, title, categories, mainImage, members, publishedAt, relatedProjects} = props\n  return (\n    <article className={styles.root}>\n      {props.mainImage && mainImage.asset && (\n        <div className={styles.mainImage}>\n          <img\n            src={imageUrlFor(buildImageObj(mainImage))\n              .width(1200)\n              .height(Math.floor((9 / 16) * 1200))\n              .fit('crop')\n              .url()}\n            alt={mainImage.alt}\n          />\n        </div>\n      )}\n      <Container>\n        <div className={styles.grid}>\n          <div className={styles.mainContent}>\n            <h1 className={styles.title}>{title}</h1>\n            {_rawBody && <BlockContent blocks={_rawBody || []} />}\n          </div>\n          <aside className={styles.metaContent}>\n            {publishedAt && (\n              <div className={styles.publishedAt}>\n                {differenceInDays(new Date(publishedAt), new Date()) > 3\n                  ? distanceInWords(new Date(publishedAt), new Date())\n                  : format(new Date(publishedAt), 'MMMM Do YYYY')}\n              </div>\n            )}\n            {members && members.length > 0 && <RoleList items={members} title='Project members' />}\n            {categories && categories.length > 0 && (\n              <div className={styles.categories}>\n                <h3 className={styles.categoriesHeadline}>Categories</h3>\n                <ul>\n                  {categories.map(category => (\n                    <li key={category._id}>{category.title}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {relatedProjects && relatedProjects.length > 0 && (\n              <div className={styles.relatedProjects}>\n                <h3 className={styles.relatedProjectsHeadline}>Related projects</h3>\n                <ul>\n                  {relatedProjects.map(project => (\n                    <li key={`related_${project._id}`}>\n                      {project.slug ? (\n                        <Link to={`/project/${project.slug.current}`}>{project.title}</Link>\n                      ) : (\n                        <span>{project.title}</span>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </aside>\n        </div>\n      </Container>\n    </article>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport Project from '../components/project'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  query ProjectTemplateQuery($id: String!) {\n    sampleProject: sanitySampleProject(id: {eq: $id}) {\n      id\n      publishedAt\n      categories {\n        _id\n        title\n      }\n      relatedProjects {\n        title\n        _id\n        slug {\n          current\n        }\n      }\n      mainImage {\n        crop {\n          _key\n          _type\n          top\n          bottom\n          left\n          right\n        }\n        hotspot {\n          _key\n          _type\n          x\n          y\n          height\n          width\n        }\n        asset {\n          _id\n        }\n        alt\n      }\n      title\n      slug {\n        current\n      }\n      _rawBody\n      members {\n        _key\n        person {\n          image {\n            crop {\n              _key\n              _type\n              top\n              bottom\n              left\n              right\n            }\n            hotspot {\n              _key\n              _type\n              x\n              y\n              height\n              width\n            }\n            asset {\n              _id\n            }\n          }\n          name\n        }\n        roles\n      }\n    }\n  }\n`\n\nconst ProjectTemplate = props => {\n  const {data, errors} = props\n  const project = data && data.sampleProject\n  return (\n    <Layout>\n      {errors && <SEO title='GraphQL Error' />}\n      {project && <SEO title={project.title || 'Untitled'} />}\n\n      {errors && (\n        <Container>\n          <GraphQLErrorList errors={errors} />\n        </Container>\n      )}\n      {project && <Project {...project} />}\n    </Layout>\n  )\n}\n\nexport default ProjectTemplate\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import {format, isFuture} from 'date-fns'\n\nexport function cn (...args) {\n  return args.filter(Boolean).join(' ')\n}\n\nexport function mapEdgesToNodes (data) {\n  if (!data.edges) return []\n  return data.edges.map(edge => edge.node)\n}\n\nexport function filterOutDocsWithoutSlugs ({slug}) {\n  return (slug || {}).current\n}\n\nexport function filterOutDocsPublishedInTheFuture ({publishedAt}) {\n  return !isFuture(publishedAt)\n}\n\nexport function getBlogUrl (publishedAt, slug) {\n  return `/blog/${format(publishedAt, 'YYYY/MM')}/${slug.current || slug}/`\n}\n\nexport function buildImageObj (source) {\n  const imageObj = {\n    asset: {_ref: source.asset._ref || source.asset._id}\n  }\n\n  if (source.crop) imageObj.crop = source.crop\n  if (source.hotspot) imageObj.hotspot = source.hotspot\n\n  return imageObj\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = {\n  sanity: {\n    projectId: process.env.GATSBY_SANITY_PROJECT_ID || 'neoqkgsx',\n    dataset: process.env.GATSBY_SANITY_DATASET || 'production'\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport {StaticQuery, graphql} from 'gatsby'\n\nfunction SEO ({description, lang, meta, keywords, title}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || (data.site && data.site.description) || ''\n        const siteTitle = (data.site && data.site.title) || ''\n        const siteAuthor = (data.site && data.site.author && data.site.author.name) || ''\n        return (\n          <Helmet\n            htmlAttributes={{lang}}\n            title={title}\n            titleTemplate={title === siteTitle ? '%s' : `%s | ${siteTitle}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: siteAuthor\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords && keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site: sanitySiteSettings(_id: {eq: \"siteSettings\"}) {\n      title\n      description\n      keywords\n      author {\n        name\n      }\n    }\n  }\n`\n","import React from 'react'\n\nconst strokeStyle = {vectorEffect: 'non-scaling-stroke'}\n\nconst HamburgerIcon = () => (\n  <svg\n    viewBox='0 0 25 25'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    preserveAspectRatio='xMidYMid'\n    width='1em'\n    height='1em'\n  >\n    <path d='M5 7.5H20' stroke='currentColor' style={strokeStyle} />\n    <path d='M5 12.5H20' stroke='currentColor' style={strokeStyle} />\n    <path d='M5 17.5H20' stroke='currentColor' style={strokeStyle} />\n  </svg>\n)\n\nexport default HamburgerIcon\n","import React from 'react'\nimport HamburgerIcon from './hamburger'\n\nfunction Icon (props) {\n  switch (props.symbol) {\n    case 'hamburger':\n      return <HamburgerIcon />\n    default:\n      return <span>Unknown icon: {props.symbol}</span>\n  }\n}\n\nexport default Icon\n","import {Link} from 'gatsby'\nimport React from 'react'\nimport Icon from './icon'\nimport {cn} from '../lib/helpers'\n\nimport styles from './header.module.css'\n\nconst Header = ({onHideNav, onShowNav, showNav, siteTitle}) => (\n  <div className={styles.root}>\n    <div className={styles.wrapper}>\n      <div className={styles.branding}>\n        <Link to='/'>{siteTitle}</Link>\n      </div>\n\n      <button className={styles.toggleNavButton} onClick={showNav ? onHideNav : onShowNav}>\n        <Icon symbol='hamburger' />\n      </button>\n\n      <nav className={cn(styles.nav, showNav && styles.showNav)}>\n        <ul>\n          <li>\n            <Link to='/archive/'>Archive</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport Header from './header'\n\nimport '../styles/layout.css'\nimport styles from './layout.module.css'\n\nconst Layout = ({children, onHideNav, onShowNav, showNav, siteTitle}) => (\n  <>\n    <Header siteTitle={siteTitle} onHideNav={onHideNav} onShowNav={onShowNav} showNav={showNav} />\n    <div className={styles.content}>{children}</div>\n    <footer className={styles.footer}>\n      <div className={styles.footerWrapper}>\n        <div className={styles.siteInfo}>\n          © {new Date().getFullYear()}, Built with <a href='https://www.sanity.io'>Sanity</a> &amp;\n          {` `}\n          <a href='https://www.gatsbyjs.org'>Gatsby</a>\n        </div>\n      </div>\n    </footer>\n  </>\n)\n\nexport default Layout\n","import React from 'react'\n\nimport styles from './container.module.css'\n\nconst Container = ({children}) => {\n  return <div className={styles.root}>{children}</div>\n}\n\nexport default Container\n","import clientConfig from '../../client-config'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst builder = imageUrlBuilder(clientConfig.sanity)\n\nexport function imageUrlFor (source) {\n  return builder.image(source)\n}\n","import React from 'react'\n\nconst GraphQLErrorList = ({errors}) => (\n  <div>\n    <h1>GraphQL Error</h1>\n    {errors.map(error => (\n      <pre key={error.message}>{error.message}</pre>\n    ))}\n  </div>\n)\n\nexport default GraphQLErrorList\n","import {graphql, StaticQuery} from 'gatsby'\nimport React, {useState} from 'react'\nimport Layout from '../components/layout'\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site: sanitySiteSettings(_id: {regex: \"/(drafts.|)siteSettings/\"}) {\n      title\n    }\n  }\n`\n\nfunction LayoutContainer (props) {\n  const [showNav, setShowNav] = useState(false)\n  function handleShowNav () {\n    setShowNav(true)\n  }\n  function handleHideNav () {\n    setShowNav(false)\n  }\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        if (!data.site) {\n          throw new Error(\n            'Missing \"Site settings\". Open the studio at http://localhost:3333 and add \"Site settings\" data'\n          )\n        }\n        return (\n          <Layout\n            {...props}\n            showNav={showNav}\n            siteTitle={data.site.title}\n            onHideNav={handleHideNav}\n            onShowNav={handleShowNav}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default LayoutContainer\n","import Figure from './figure'\n\nconst serializers = {\n  types: {\n    figure: Figure\n  }\n}\n\nexport default serializers\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport {getFluidGatsbyImage} from 'gatsby-source-sanity'\nimport clientConfig from '../../client-config'\n\nimport styles from './figure.module.css'\n\nexport default ({node}) => {\n  if (!node.asset) {\n    return null\n  }\n\n  const fluidProps = getFluidGatsbyImage(node.asset._ref, {maxWidth: 675}, clientConfig.sanity)\n\n  return (\n    <figure className={styles.root}>\n      <Img fluid={fluidProps} alt={node.alt} />\n      {node.caption && <figcaption>{node.caption}</figcaption>}\n    </figure>\n  )\n}\n"],"sourceRoot":""}