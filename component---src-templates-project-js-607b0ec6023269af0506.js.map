{"version":3,"sources":["webpack:///./src/components/block-content.js","webpack:///./src/components/role-list.js","webpack:///./src/lib/string-utils.js","webpack:///./src/components/project.js","webpack:///./src/templates/project.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./client-config.js","webpack:///./src/components/seo.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/layout.js","webpack:///./src/lib/helpers.js","webpack:///./src/components/container.js","webpack:///./src/lib/image-url.js","webpack:///./src/components/graphql-error-list.js","webpack:///./src/containers/layout.js","webpack:///./src/components/serializers.js","webpack:///./src/components/figure.js"],"names":["BlockContent","_ref","blocks","react_default","a","createElement","BlockContent_default","Object","assign","serializers","clientConfig","sanity","RoleList","items","title","className","styles","root","headline","list","map","item","key","_key","listItem","avatar","person","image","asset","src","imageUrlFor","buildImageObj","width","height","fit","url","alt","name","roles","role","idx","str","substr","toUpperCase","length","Project","props","_rawBody","categories","mainImage","members","publishedAt","relatedProjects","Math","floor","container","grid","mainContent","block_content","metaContent","differenceInDays","Date","distanceInWords","format","role_list","categoriesHeadline","category","_id","relatedProjectsHeadline","project","slug","gatsby_browser_entry","to","current","__webpack_require__","d","__webpack_exports__","query","ProjectTemplate","data","errors","sampleProject","layout","seo","graphql_error_list","components_project","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","projectId","process","dataset","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteTitle","siteAuthor","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","join","rel","href","_public_static_d_2913871497_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","Header","Layout","onHideNav","onShowNav","showNav","components_Header_Header","getFullYear","cn","mapEdgesToNodes","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","date_fns__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","args","Array","filter","Boolean","edges","edge","node","_ref2","isFuture","source","imageObj","crop","hotspot","_container_module_css__WEBPACK_IMPORTED_MODULE_1__","_container_module_css__WEBPACK_IMPORTED_MODULE_1___default","Container","_client_config__WEBPACK_IMPORTED_MODULE_0__","_client_config__WEBPACK_IMPORTED_MODULE_0___default","_sanity_image_url__WEBPACK_IMPORTED_MODULE_1__","builder","imageUrlBuilder","GraphQLErrorList","error","message","LayoutContainer","_useState","useState","setShowNav","handleShowNav","handleHideNav","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","Error","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_2247365910_json__WEBPACK_IMPORTED_MODULE_1__","types","figure","fluidProps","getFluidGatsbyImage","maxWidth","gatsby_image_default","fluid","caption"],"mappings":"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","file":"component---src-templates-project-js-607b0ec6023269af0506.js","sourcesContent":["import BaseBlockContent from '@sanity/block-content-to-react'\nimport React from 'react'\nimport clientConfig from '../../client-config'\nimport serializers from './serializers'\n\nconst BlockContent = ({blocks}) => (\n  <BaseBlockContent blocks={blocks} serializers={serializers} {...clientConfig.sanity} />\n)\n\nexport default BlockContent\n","import React from 'react'\nimport {buildImageObj} from '../lib/helpers'\nimport {imageUrlFor} from '../lib/image-url'\nimport {ucfirst} from '../lib/string-utils'\n\nimport styles from './role-list.module.css'\n\nfunction RoleList ({items, title}) {\n  return (\n    <div className={styles.root}>\n      <h2 className={styles.headline}>{title}</h2>\n      <ul className={styles.list}>\n        {items.map(item => (\n          <li key={item._key} className={styles.listItem}>\n            <div>\n              <div className={styles.avatar}>\n                {item.person && item.person.image && item.person.image.asset && (\n                  <img\n                    src={imageUrlFor(buildImageObj(item.person.image))\n                      .width(100)\n                      .height(100)\n                      .fit('crop')\n                      .url()}\n                    alt=''\n                  />\n                )}\n              </div>\n            </div>\n            <div>\n              <div>\n                <strong>{(item.person && item.person.name) || <em>Missing name</em>}</strong>\n              </div>\n              {item.roles && (\n                <div>\n                  {item.roles.map((role, idx) => {\n                    switch (true) {\n                      case idx === 0:\n                        return <span key={role}>{ucfirst(role)}</span>\n                      case idx === item.roles.length - 1:\n                        return <span key={role}> & {role}</span>\n                      default:\n                        return <span key={role}>, {role}</span>\n                    }\n                  })}\n                </div>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default RoleList\n","export function ucfirst (str) {\n  return `${str.substr(0, 1).toUpperCase()}${str.substr(1)}`\n}\n","import {format, distanceInWords, differenceInDays} from 'date-fns'\nimport React from 'react'\nimport {Link} from 'gatsby'\nimport {buildImageObj} from '../lib/helpers'\nimport {imageUrlFor} from '../lib/image-url'\nimport BlockContent from './block-content'\nimport Container from './container'\nimport RoleList from './role-list'\n\nimport styles from './project.module.css'\n\nfunction Project (props) {\n  const {_rawBody, title, categories, mainImage, members, publishedAt, relatedProjects} = props\n  return (\n    <article className={styles.root}>\n      {props.mainImage && mainImage.asset && (\n        <div className={styles.mainImage}>\n          <img\n            src={imageUrlFor(buildImageObj(mainImage))\n              .width(1200)\n              .height(Math.floor((9 / 16) * 1200))\n              .fit('crop')\n              .url()}\n            alt={mainImage.alt}\n          />\n        </div>\n      )}\n      <Container>\n        <div className={styles.grid}>\n          <div className={styles.mainContent}>\n            <h1 className={styles.title}>{title}</h1>\n            {_rawBody && <BlockContent blocks={_rawBody || []} />}\n          </div>\n          <aside className={styles.metaContent}>\n            {publishedAt && (\n              <div className={styles.publishedAt}>\n                {differenceInDays(new Date(publishedAt), new Date()) > 3\n                  ? distanceInWords(new Date(publishedAt), new Date())\n                  : format(new Date(publishedAt), 'MMMM Do YYYY')}\n              </div>\n            )}\n            {members && members.length > 0 && <RoleList items={members} title='Project members' />}\n            {categories && categories.length > 0 && (\n              <div className={styles.categories}>\n                <h3 className={styles.categoriesHeadline}>Categories</h3>\n                <ul>\n                  {categories.map(category => (\n                    <li key={category._id}>{category.title}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {relatedProjects && relatedProjects.length > 0 && (\n              <div className={styles.relatedProjects}>\n                <h3 className={styles.relatedProjectsHeadline}>Related projects</h3>\n                <ul>\n                  {relatedProjects.map(project => (\n                    <li key={`related_${project._id}`}>\n                      {project.slug ? (\n                        <Link to={`/project/${project.slug.current}`}>{project.title}</Link>\n                      ) : (\n                        <span>{project.title}</span>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </aside>\n        </div>\n      </Container>\n    </article>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport Project from '../components/project'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  query ProjectTemplateQuery($id: String!) {\n    sampleProject: sanitySampleProject(id: {eq: $id}) {\n      id\n      publishedAt\n      categories {\n        _id\n        title\n      }\n      relatedProjects {\n        title\n        _id\n        slug {\n          current\n        }\n      }\n      mainImage {\n        crop {\n          _key\n          _type\n          top\n          bottom\n          left\n          right\n        }\n        hotspot {\n          _key\n          _type\n          x\n          y\n          height\n          width\n        }\n        asset {\n          _id\n        }\n        alt\n      }\n      title\n      slug {\n        current\n      }\n      _rawBody\n      members {\n        _key\n        person {\n          image {\n            crop {\n              _key\n              _type\n              top\n              bottom\n              left\n              right\n            }\n            hotspot {\n              _key\n              _type\n              x\n              y\n              height\n              width\n            }\n            asset {\n              _id\n            }\n          }\n          name\n        }\n        roles\n      }\n    }\n  }\n`\n\nconst ProjectTemplate = props => {\n  const {data, errors} = props\n  const project = data && data.sampleProject\n  return (\n    <Layout>\n      {errors && <SEO title='GraphQL Error' />}\n      {project && <SEO title={project.title || 'Untitled'} />}\n\n      {errors && (\n        <Container>\n          <GraphQLErrorList errors={errors} />\n        </Container>\n      )}\n      {project && <Project {...project} />}\n    </Layout>\n  )\n}\n\nexport default ProjectTemplate\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  sanity: {\n    projectId: process.env.GATSBY_SANITY_PROJECT_ID || 'neoqkgsx',\n    dataset: process.env.GATSBY_SANITY_DATASET || 'production'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport {StaticQuery, graphql} from 'gatsby'\n\nfunction SEO ({description, lang, meta, keywords, title}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || (data.site && data.site.description) || ''\n        const siteTitle = (data.site && data.site.title) || ''\n        const siteAuthor = (data.site && data.site.author && data.site.author.name) || ''\n        return (\n          <Helmet\n            htmlAttributes={{lang}}\n            title={title}\n            titleTemplate={title === siteTitle ? '%s' : `%s | ${siteTitle}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: siteAuthor\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords && keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css' />\n            <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.1/animate.min.css' />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site: sanitySiteSettings(_id: {eq: \"siteSettings\"}) {\n      title\n      description\n      keywords\n      author {\n        name\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport \"./header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <Link to=\"/\" className=\"header__title\">{siteTitle}</Link>\n    <nav className=\"header__nav\">\n      <Link to=\"/\" className=\"header__link\">Home</Link>\n      <Link to=\"/portfolio/\" className=\"header__link\">Portfolio</Link>\n      {/*<Link to=\"/story/\" className=\"header__link\">Story</Link>*/}\n      {/*<Link to=\"/links/\" className=\"header__link\">Links</Link>*/}\n      {/*<Link to=\"/contacts/\" className=\"header__link\">Contacts</Link>*/}\n    </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\n// import Header from './header'\nimport Header from \"./Header/Header\"\n\nimport '../styles/layout.css'\nimport styles from './layout.module.css'\nimport './main.css'\n\nconst Layout = ({children, onHideNav, onShowNav, showNav, siteTitle}) => (\n  <>\n    <Header siteTitle={siteTitle} onHideNav={onHideNav} onShowNav={onShowNav} showNav={showNav} />\n    <main className=\"mainContainer\">\n      <div className={styles.content}>{children}</div>\n    </main>\n\n    <footer className=\"footer\">\n      <div className=\"container\">\n          © {new Date().getFullYear()} Pavel \"Ckomop0x\"\n          Klochkov., Built with <a href='https://www.sanity.io'>Sanity</a> &amp;\n          {` `}\n          <a href='https://www.gatsbyjs.org'>Gatsby</a>\n      </div>\n    </footer>\n  </>\n)\n\nexport default Layout\n","import {format, isFuture} from 'date-fns'\n\nexport function cn (...args) {\n  return args.filter(Boolean).join(' ')\n}\n\nexport function mapEdgesToNodes (data) {\n  if (!data.edges) return []\n  return data.edges.map(edge => edge.node)\n}\n\nexport function filterOutDocsWithoutSlugs ({slug}) {\n  return (slug || {}).current\n}\n\nexport function filterOutDocsPublishedInTheFuture ({publishedAt}) {\n  return !isFuture(publishedAt)\n}\n\nexport function getBlogUrl (publishedAt, slug) {\n  return `/blog/${format(publishedAt, 'YYYY/MM')}/${slug.current || slug}/`\n}\n\nexport function buildImageObj (source) {\n  const imageObj = {\n    asset: {_ref: source.asset._ref || source.asset._id}\n  }\n\n  if (source.crop) imageObj.crop = source.crop\n  if (source.hotspot) imageObj.hotspot = source.hotspot\n\n  return imageObj\n}\n","import React from 'react'\n\nimport styles from './container.module.css'\n\nconst Container = ({children}) => {\n  return <div className={styles.root}>{children}</div>\n}\n\nexport default Container\n","import clientConfig from '../../client-config'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst builder = imageUrlBuilder(clientConfig.sanity)\n\nexport function imageUrlFor (source) {\n  return builder.image(source)\n}\n","import React from 'react'\n\nconst GraphQLErrorList = ({errors}) => (\n  <div>\n    <h1>GraphQL Error</h1>\n    {errors.map(error => (\n      <pre key={error.message}>{error.message}</pre>\n    ))}\n  </div>\n)\n\nexport default GraphQLErrorList\n","import {graphql, StaticQuery} from 'gatsby'\nimport React, {useState} from 'react'\nimport Layout from '../components/layout'\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site: sanitySiteSettings(_id: {regex: \"/(drafts.|)siteSettings/\"}) {\n      title\n    }\n  }\n`\n\nfunction LayoutContainer (props) {\n  const [showNav, setShowNav] = useState(false)\n  function handleShowNav () {\n    setShowNav(true)\n  }\n  function handleHideNav () {\n    setShowNav(false)\n  }\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        if (!data.site) {\n          throw new Error(\n            'Missing \"Site settings\". Open the studio at http://localhost:3333 and add \"Site settings\" data'\n          )\n        }\n        return (\n          <Layout\n            {...props}\n            showNav={showNav}\n            siteTitle={data.site.title}\n            onHideNav={handleHideNav}\n            onShowNav={handleShowNav}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default LayoutContainer\n","import Figure from './figure'\n\nconst serializers = {\n  types: {\n    figure: Figure\n  }\n}\n\nexport default serializers\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport {getFluidGatsbyImage} from 'gatsby-source-sanity'\nimport clientConfig from '../../client-config'\n\nimport styles from './figure.module.css'\n\nexport default ({node}) => {\n  if (!node.asset) {\n    return null\n  }\n\n  const fluidProps = getFluidGatsbyImage(node.asset._ref, {maxWidth: 675}, clientConfig.sanity)\n\n  return (\n    <figure className={styles.root}>\n      <Img fluid={fluidProps} alt={node.alt} />\n      {node.caption && <figcaption>{node.caption}</figcaption>}\n    </figure>\n  )\n}\n"],"sourceRoot":""}